{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/itinerario/components/itinerario/itinerario.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/itinerario/components/itinerario/itinerario.component.css","./src/app/itinerario/components/itinerario/itinerario.component.ts","./src/app/itinerario/itinerario.module.ts","./src/app/shared/services/itinerario.service.js","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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,CAAC;QACR,YAAY,EAAE,CAAC,+FAAmB,CAAC;QACnC,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,CAAC;QACpC,OAAO,EAAE,CAAC,+FAAmB,CAAC;KAC/B,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;;ACV7B;AAAA;AAAA;AAAA;AAAivD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,YAAY;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gCAAgC;AAC5E;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,uBAAuB,sCAAsC;AAC7D;AACA;AACA,6EAA6E,OAAO;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gDAAkB;AACtC,IAAI,gEAAU;AACd;AACA,KAAK;AACL;AAC6B;AAC7B,8C;;;;;;;;;;;;;;;;;;;;;;;AClRA;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ACfpB;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"main\\\">\\n    <app-itinerario></app-itinerario>\\n</div>\\n\"","export default \"\\n  <div class=\\\"header\\\">\\n    <!--<img src=\\\"logoCinvesHeader.png\\\" width=100 height=100 align=\\\"center\\\"> --><h1>Viajando Por México</h1>\\n  </div>\\n\\n  <!-- Coordenadas iniciales -->\\n\\n  <div class=\\\"labels\\\">\\n    <h3>Posición inicial</h3>\\n    <label>Latitud: </label><input type=\\\"number\\\" [(ngModel)] = \\\"latitud\\\" placeholder=\\\"Latitud\\\"/>\\n    <label> Longitud: </label><input type=\\\"number\\\" [(ngModel)] = \\\"longitud\\\" placeholder=\\\"Longitud\\\"/>\\n  </div>\\n  <br/>\\n\\n  <!-- Método a utilizar -->\\n  <div id=\\\"radios\\\" class=\\\"radios\\\">\\n    <label><input type=\\\"radio\\\" [(ngModel)] = \\\"algoritmo\\\" value = \\\"E\\\">Búsqueda exhaustiva</label><br/>\\n    <label><input type=\\\"radio\\\" [(ngModel)] = \\\"algoritmo\\\" value = \\\"V\\\">Búsqueda voráz</label><br/>\\n    <label><input type=\\\"radio\\\" [(ngModel)] = \\\"algoritmo\\\" value = \\\"A\\\">Ambas</label><br/>\\n  </div>\\n<br/>\\n\\n  <!-- ComboBox de Estados y Ciudades -->\\n\\n  <select id=\\\"selectEstados\\\" (change)=\\\"cambiarEstado($event.target.value)\\\">\\n      <option\\n        id=\\\"estado-{{ estado.nombre }}\\\"\\n        *ngFor=\\\"let estado of estados\\\"\\n        value=\\\"{{ estado.nombre }}\\\">\\n        {{ estado.nombre }}\\n    </option>\\n  </select>\\n\\n  <select (change)=\\\"cambiarCiudad($event.target.value)\\\" id=\\\"selectCiudades\\\">\\n    <option\\n        id=\\\"ciudad-{{ ciudad.nombre }}\\\"\\n        *ngFor=\\\"let ciudad of ciudades\\\"\\n        value=\\\"{{ ciudad.nombre }}\\\">\\n        {{ ciudad.nombre }}\\n    </option>\\n  </select>\\n\\n  <!-- Agregar Ciudades a la Lista -->\\n\\n  <button (click)=\\\"agregarUbicacion()\\\">\\n    Seleccionar\\n  </button>\\n<br/>\\n<br/>\\n\\n  <!-- Tabla de Estados Seleccionados -->\\n  <div id=\\\"estadosSeleccionados\\\" *ngIf=\\\"!itinerarioService.ningunoSeleccionado()\\\">\\n      <table>\\n      <thead>\\n          <th>Estado</th>\\n          <th>Ciudad</th>\\n          <th>Latitud</th>\\n          <th>Longitud</th>\\n      </thead>\\n      <tbody>\\n          <tr *ngFor=\\\"let ubicacion of itinerarioService.ubicaciones\\\">\\n          <td>{{ ubicacion.nombreEstado }}</td>\\n          <td>{{ ubicacion.nombreCiudad }}</td>\\n          <td>{{ ubicacion.latitud }}</td>\\n          <td>{{ ubicacion.longitud }}</td>\\n          </tr>\\n      </tbody>\\n      </table>\\n  </div>\\n<br/>\\n\\n  <!-- Calcular Ruta -->\\n  <button (click)=\\\"calcularMejorRuta()\\\" [disabled]=\\\"ningunoSeleccionado()\\\">\\n      Enviar\\n  </button>\\n<br/>\\n\\n  <!-- Solución Exhaustiva -->\\n  <div id=\\\"exhaustiva\\\" *ngIf=\\\"itinerarioService.mostrarExhaustiva()\\\">\\n    \\n    <p>has seleccionado exhaustiva</p>\\n      \\n      <table style=\\\"white-space: pre;\\\">\\n          <tbody>\\n            <tr *ngFor=\\\"let soluciones of itinerarioService.solucionesExhaustivo\\\">\\n              <td>Ruta: {{ soluciones.ubicaciones }}</td>\\n              <td>Distancia: {{ soluciones.distancia | number }} km</td>\\n            </tr>\\n        </tbody>\\n      </table>\\n  </div>\\n\\n  <!-- Solución Voraz -->\\n  <div id=\\\"voraz\\\" *ngIf=\\\"itinerarioService.mostrarVoraz()\\\">\\n    <h3>Búsqueda voráz</h3>\\n    \\n    <table style=\\\"white-space: pre;\\\">\\n        <tbody>\\n            <td>Ruta: {{ itinerarioService.solucionVoraz.ciudades }}</td>\\n            <td>Distancia: {{ itinerarioService.solucionVoraz.distancia | number }} km</td>\\n        </tbody>\\n      </table>\\n  </div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(){}\n\n  titulo = \"Viajando por México\";\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { ItinerarioModule } from \"./itinerario/itinerario.module\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, ItinerarioModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"table, th , td  {\\n    border: 5px solid rgb(102, 128, 119);\\n    border-collapse: collapse;\\n    padding: 5px;\\n  }\\nh1, h2, h3, h4, h5, h6{\\n    font-family:\\\"Segoe UI\\\",Arial,sans-serif;\\n    font-weight:400;\\n    margin:10px 0\\n  }\\n.w3-wide{letter-spacing:4px}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaXRpbmVyYXJpby9jb21wb25lbnRzL2l0aW5lcmFyaW8vaXRpbmVyYXJpby5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0NBQW9DO0lBQ3BDLHlCQUF5QjtJQUN6QixZQUFZO0VBQ2Q7QUFDRjtJQUNJLHVDQUF1QztJQUN2QyxlQUFlO0lBQ2Y7RUFDRjtBQUFDLFNBQVMsa0JBQWtCIiwiZmlsZSI6InNyYy9hcHAvaXRpbmVyYXJpby9jb21wb25lbnRzL2l0aW5lcmFyaW8vaXRpbmVyYXJpby5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUsIHRoICwgdGQgIHtcbiAgICBib3JkZXI6IDVweCBzb2xpZCByZ2IoMTAyLCAxMjgsIDExOSk7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgICBwYWRkaW5nOiA1cHg7XG4gIH1cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDZ7XG4gICAgZm9udC1mYW1pbHk6XCJTZWdvZSBVSVwiLEFyaWFsLHNhbnMtc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6NDAwO1xuICAgIG1hcmdpbjoxMHB4IDBcbiAgfS53My13aWRle2xldHRlci1zcGFjaW5nOjRweH1cblxuIl19 */\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport lugares from 'src/assets/js/lugares.json';\n\nimport { Estado } from 'src/app/shared/models/estado.js';\nimport { Ciudad } from 'src/app/shared/models/ciudad.js';\n\nimport { ItinerarioService } from \"src/app/shared/services/itinerario.service.js\";\n\n@Component({\n  selector: 'app-itinerario',\n  templateUrl: './itinerario.component.html',\n  styleUrls: ['./itinerario.component.css']\n})\nexport class ItinerarioComponent implements OnInit {\n  @Input() latitud: number;\n  @Input() longitud: number;\n  @Input() algoritmo: string = \"E\";\n\n  mostrarResultado: boolean = false;\n  estados: Estado[] = lugares.estados;\n  estadoSeleccionado: Estado = this.estados[0];\n  ciudades: Ciudad[] = this.estadoSeleccionado.ciudades;\n  ciudadSeleccionada: Ciudad = this.ciudades[0];\n\n  constructor(public itinerarioService: ItinerarioService) {}\n\n  ngOnInit() {}\n\n  cambiarEstado(nombreEstado: string) {\n    this.estadoSeleccionado = this.estados.find(\n      estado => estado.nombre === nombreEstado\n    );\n    this.ciudades = this.estadoSeleccionado.ciudades;\n    this.ciudadSeleccionada = this.estadoSeleccionado.ciudades[0];\n  }\n\n  cambiarCiudad(nombreCiudad: string) {\n    this.ciudadSeleccionada = this.ciudades.find(\n      ciudad => ciudad.nombre === nombreCiudad\n    );\n  }\n\n  agregarUbicacion() {\n    this.itinerarioService.agregarUbicacion(\n      this.estadoSeleccionado,\n      this.ciudadSeleccionada\n    );\n  }\n\n  calcularMejorRuta() {\n    this.itinerarioService.calcularMejorRuta(this.latitud, this.longitud, this.algoritmo);\n  }\n\n  ningunoSeleccionado() : boolean {\n    return (!this.latitud || !this.longitud || this.itinerarioService.ningunoSeleccionado());\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { CommonModule } from '@angular/common';\nimport { ItinerarioComponent } from './components/itinerario/itinerario.component';\n\n@NgModule({\n  declarations: [ItinerarioComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [ItinerarioComponent]\n})\nexport class ItinerarioModule { }\n","import * as tslib_1 from \"tslib\";\nimport { Injectable } from '@angular/core';\n//\nlet ItinerarioService = class ItinerarioService {\n    //ubicacionInicial: Ubicacion;\n    //Constructor\n    constructor() {\n        //Variables de clase\n        this.radioTierra = 6371;\n        this.ubicaciones = [];\n    }\n    //Método que agrega la información del lugar al arreglo ubicaciones\n    agregarUbicacion(estado, ciudad) {\n        this.ubicaciones.push({\n            nombreEstado: estado.nombre,\n            nombreCiudad: ciudad.nombre,\n            latitud: ciudad.latitud,\n            longitud: ciudad.longitud\n        });\n    }\n    //Método que calcula la mejor ruta basado en la latitud, longitud y algoritmo seleccionado\n    calcularMejorRuta(latitud, longitud, algoritmo) {\n        this.solucionesExhaustivo = [];\n        this.solucionVoraz = null;\n        let ubicacionInicial = {\n            nombreEstado: \"Posición\",\n            nombreCiudad: \"inicial\",\n            latitud: latitud,\n            longitud: longitud\n        };\n        let busquedaExhaustiva = \"E\";\n        let busquedaVoraz = \"V\";\n        let ambas = \"A\";\n        switch (algoritmo) {\n            case busquedaExhaustiva:\n                //To Do: Algoritmo de búsqueda Exhaustiva\n                this.busquedaExhaustiva(ubicacionInicial);\n                console.log(this.solucionesExhaustivo);\n                break;\n            case busquedaVoraz:\n                this.solucionVoraz = this.busquedaVorazv2(ubicacionInicial, this.ubicaciones);\n                break;\n            case ambas:\n                //Búsqueda Exhaustiva\n                this.busquedaExhaustiva(ubicacionInicial);\n                console.log(this.solucionesExhaustivo);\n                //Búsqueda Boraz\n                this.solucionVoraz = this.busquedaVorazv2(ubicacionInicial, this.ubicaciones);\n                ;\n                break;\n        }\n    }\n    //Método que calcula la distancia Harvesine\n    calcularDistancia(latitud1, longitud1, latitud2, longitud2) {\n        let primeraParte = this.calcularSenoCuadrado(latitud1, latitud2);\n        let segundaParte = Math.cos(latitud1) * Math.cos(latitud2);\n        let terceraParte = this.calcularSenoCuadrado(longitud1, longitud2);\n        let raiz = Math.sqrt(primeraParte + (segundaParte * terceraParte));\n        let arcoseno = Math.asin(raiz);\n        return 2 * this.radioTierra * arcoseno;\n    }\n    //Método que calcula el segmento seno de la ecuación de la distancia Harvesine\n    calcularSenoCuadrado(numero1, numero2) {\n        let seno = Math.sin((numero2 - numero1) / 2);\n        return seno * seno;\n    }\n    //Método que cambia grados a radianes\n    gradosARadianes(grados) {\n        let radianes = grados * (Math.PI / 180);\n        return radianes;\n    }\n    //Método que calcula la distancia dadas dos ubicaciones\n    calcularDistanciaUbicaciones(ubicacion1, ubicacion2) {\n        return this.calcularDistancia(this.gradosARadianes(ubicacion1.latitud), this.gradosARadianes(ubicacion1.longitud), this.gradosARadianes(ubicacion2.latitud), this.gradosARadianes(ubicacion2.longitud));\n    }\n    //Método que verifica si el usuario ha seleccionado ubicaciones\n    ningunoSeleccionado() {\n        if (this.ubicaciones.length === 0) {\n            return true;\n        }\n        return false;\n    }\n    //Método que verifica si existe una solución exhaustiva (basado en la selección del usuario)\n    mostrarExhaustiva() {\n        return (!!this.solucionesExhaustivo);\n    }\n    //Método que verifica si existe una solución voráz (basado en la selección del usuario)\n    mostrarVoraz() {\n        return (!!this.solucionVoraz);\n    }\n    //Método que ejecuta la búsqueda voráz simple\n    busquedaVoraz(ubicacionInicial, ubicaciones) {\n        let solucion;\n        let ordenCiudades = [];\n        let auxiliarUbicaciones = [...ubicaciones];\n        //Se busca la ciudad más cercana al punto inicial\n        ordenCiudades.push(this.menorDistancia(ubicacionInicial, auxiliarUbicaciones));\n        for (let index = 0; index < ubicaciones.length; index++) {\n            auxiliarUbicaciones = this.quitarUbicacion(ordenCiudades[index], auxiliarUbicaciones);\n            if (auxiliarUbicaciones.length === 0) {\n                break;\n            }\n            ordenCiudades.push(this.menorDistancia(ordenCiudades[index], auxiliarUbicaciones));\n        }\n        //Se añade el punto inicial al princio del arreglo de ubicaciones\n        ordenCiudades.splice(0, 0, ubicacionInicial);\n        //Se añade el punto inicial al final del arreglo de ubicaciones\n        ordenCiudades.push(ubicacionInicial);\n        solucion = this.ubicacionesASolucion(ordenCiudades);\n        return solucion;\n    }\n    //Método que encuentra la menor distancia entre una distancia determinada y un conjunto de ubicaciones\n    menorDistancia(ubicacion, ubicaciones) {\n        let ubicacionMenorDistancia;\n        let menorDistancia = Number.MAX_VALUE;\n        let indice = 0;\n        let elementoContador = 0;\n        ubicaciones.forEach(elemento => {\n            let menor = this.calcularDistanciaUbicaciones(ubicacion, elemento);\n            if (menorDistancia > menor) {\n                menorDistancia = menor;\n                indice = elementoContador;\n            }\n            elementoContador++;\n        });\n        ubicacionMenorDistancia = this.clonarUbicacion(ubicaciones[indice]);\n        return ubicacionMenorDistancia;\n    }\n    //Método que quita una ubicación de un arreglo de ubicaciones (para evitar repetir ubicaciones)\n    quitarUbicacion(ubicacion, ubicaciones) {\n        for (let index = 0; index < ubicaciones.length; index++) {\n            if (ubicaciones[index].latitud === ubicacion.latitud && ubicaciones[index].longitud === ubicacion.longitud) {\n                ubicaciones.splice(index, 1);\n                index--;\n            }\n        }\n        return ubicaciones;\n    }\n    //Método que transforma un arreglo de ubicaciones a una solución\n    ubicacionesASolucion(ubicaciones) {\n        let solucion;\n        let ciudades = \"\";\n        let index = 1;\n        ubicaciones.forEach(elemento => {\n            ciudades += \"\\n\" + index + \": \" + elemento.nombreEstado + \" - \" + elemento.nombreCiudad + \" \";\n            index++;\n        });\n        solucion = { ciudades: ciudades, distancia: this.distanciaRuta(ubicaciones) };\n        return solucion;\n    }\n    //Método que retorna la distancia de una ruta\n    distanciaRuta(ubicaciones) {\n        let ubicacion = ubicaciones[0];\n        let distancia = 0;\n        for (let index = 1; index < ubicaciones.length; index++) {\n            let elemento = ubicaciones[index];\n            distancia += this.calcularDistanciaUbicaciones(ubicacion, elemento);\n            ubicacion = elemento;\n        }\n        return distancia;\n    }\n    //Función extra\n    //Método que ejecuta la búsqueda voráz v2\n    busquedaVorazv2(ubicacionInicial, ubicaciones) {\n        let solucion;\n        let ordenCiudades = [];\n        let regresoCiudades = [];\n        let auxiliarUbicaciones = this.clonarUbicaciones(ubicaciones);\n        //Se buscan las dos ciudades más cercanas al punto inicial\n        ordenCiudades.push(this.menorDistancia(ubicacionInicial, auxiliarUbicaciones));\n        auxiliarUbicaciones = this.quitarUbicacion(ordenCiudades[0], auxiliarUbicaciones);\n        if (auxiliarUbicaciones.length > 0) {\n            regresoCiudades.push(this.menorDistancia(ubicacionInicial, auxiliarUbicaciones));\n            auxiliarUbicaciones = this.quitarUbicacion(regresoCiudades[0], auxiliarUbicaciones);\n        }\n        for (let index = 0; index < auxiliarUbicaciones.length; index++) {\n            ordenCiudades.push(this.menorDistancia(ordenCiudades[index], auxiliarUbicaciones));\n            auxiliarUbicaciones = this.quitarUbicacion(ordenCiudades[index + 1], auxiliarUbicaciones);\n            if (auxiliarUbicaciones.length == 0) {\n                break;\n            }\n            regresoCiudades.push(this.menorDistancia(regresoCiudades[index], auxiliarUbicaciones));\n            auxiliarUbicaciones = this.quitarUbicacion(regresoCiudades[index + 1], auxiliarUbicaciones);\n        }\n        for (let index = regresoCiudades.length - 1; index >= 0; index--) {\n            let element = regresoCiudades[index];\n            ordenCiudades.push(element);\n        }\n        //Se añade el punto inicial al princio del arreglo de ubicaciones\n        ordenCiudades.splice(0, 0, ubicacionInicial);\n        //Se añade el punto inicial al final del arreglo de ubicaciones\n        ordenCiudades.push(ubicacionInicial);\n        solucion = this.ubicacionesASolucion(ordenCiudades);\n        return solucion;\n    }\n    //Se clona el objeto para buen manejo de memoria\n    clonarUbicacion(ubicacion) {\n        if (ubicacion === null || typeof ubicacion !== 'object') {\n            return ubicacion;\n        }\n        let temporal = ubicacion.constructor();\n        for (const key in ubicacion) {\n            if (ubicacion.hasOwnProperty(key)) {\n                temporal[key] = this.clonarUbicacion(ubicacion[key]);\n            }\n        }\n        return temporal;\n    }\n    //Se clona el arreglo para buen manejo de memoria\n    clonarUbicaciones(ubicaciones) {\n        let temporal = [];\n        ubicaciones.forEach(elemento => {\n            temporal.push(this.clonarUbicacion(elemento));\n        });\n        return temporal;\n    }\n    //Realiza las permutaciones de todas las ciudades seleccionadas\n    permutaciones(tamanio, ubicaciones) {\n        if (tamanio == 1) {\n            //Crea un nuevo elemento en el arreglo\n            this.solucionesExhaustivo.push({ ubicaciones: [], distancia: 0 });\n            //Almacena la permutación actual\n            for (var i = 0; i < ubicaciones.length; i++) {\n                this.solucionesExhaustivo[this.solucionesExhaustivo.length - 1].ubicaciones[i] = ubicaciones[i];\n            }\n        }\n        else {\n            for (let i = 0; i < tamanio; i++) {\n                this.permutaciones(tamanio - 1, ubicaciones);\n                if ((tamanio % 2) == 0) {\n                    let aux = ubicaciones[i];\n                    ubicaciones[i] = ubicaciones[tamanio - 1];\n                    ubicaciones[tamanio - 1] = aux;\n                }\n                else {\n                    let aux = ubicaciones[0];\n                    ubicaciones[0] = ubicaciones[tamanio - 1];\n                    ubicaciones[tamanio - 1] = aux;\n                }\n            }\n        }\n    }\n    //Implementa la busqueda exhaustiva y muestra el resultado\n    busquedaExhaustiva(ubicacionInicial) {\n        //Si el arreglo contiene elementos, los elimina.\n        this.solucionesExhaustivo.splice(0, this.solucionesExhaustivo.length - 1);\n        let auxUbicaciones = this.clonarUbicaciones(this.ubicaciones);\n        //Ejectua las permutaciones\n        this.permutaciones(auxUbicaciones.length, auxUbicaciones);\n        let mejorRuta = { ubicaciones: [], distancia: Infinity };\n        //Calcula las distancias\n        for (let i = 0; i < this.solucionesExhaustivo.length; i++) {\n            this.solucionesExhaustivo[i].ubicaciones.unshift(ubicacionInicial);\n            this.solucionesExhaustivo[i].ubicaciones.push(ubicacionInicial);\n            for (let j = this.solucionesExhaustivo[0].ubicaciones.length - 1; j > 0; j--) {\n                this.solucionesExhaustivo[i].distancia += this.calcularDistanciaUbicaciones(this.solucionesExhaustivo[i].ubicaciones[j], this.solucionesExhaustivo[i].ubicaciones[j - 1]);\n            }\n            //Almacena la ruta mas corta\n            if (this.solucionesExhaustivo[i].distancia < mejorRuta.distancia) {\n                mejorRuta.ubicaciones = this.solucionesExhaustivo[i].ubicaciones;\n                mejorRuta.distancia = this.solucionesExhaustivo[i].distancia;\n            }\n        }\n        console.log(\"Mejor Ruta: \");\n        console.log(mejorRuta);\n        console.log(\"Posibles rutas: \");\n    }\n};\nItinerarioService = tslib_1.__decorate([\n    Injectable({\n        providedIn: 'root'\n    })\n], ItinerarioService);\nexport { ItinerarioService };\n//# sourceMappingURL=itinerario.service.js.map","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}